/**
 * \brief Component description for PIC32CX/0525SG12 GPIO_100_137
 *
 * Copyright (c) 2018 Microchip Technology Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/* file generated from device description version 2018-04-24T21:15:30Z */
#ifndef _PIC32CX_0525SG12_GPIO_100_137_COMPONENT_H_
#define _PIC32CX_0525SG12_GPIO_100_137_COMPONENT_H_

/** \addtogroup PIC32CX_0525SG12_GPIO_100_137 GPIO 100:137 Pin Control Registers
 *  @{
 */
/* ========================================================================== */
/**  SOFTWARE API DEFINITION FOR GPIO_100_137 */
/* ========================================================================== */

/* -------- GPIO_100_137_GPIO_100_PIN_CONTROL : (GPIO_100_137 Offset: 0x00) (R/W 32) GPIO100 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n               0 100 = Interrupt events are disabled\n               1 101 = Rising Edge Triggered\n               1 110 = Falling Edge Triggered\n               1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable         1 = disable input.\n         0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_100_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_100_PIN_CONTROL_RESETVALUE (0x8000U)                                     /**<  (GPIO_100_137_GPIO_100_PIN_CONTROL) GPIO100 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_100_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_100_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_100_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_100_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_100_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_100_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_100_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_100_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_100_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n               0 100 = Interrupt events are disabled\n               1 101 = Rising Edge Triggered\n               1 110 = Falling Edge Triggered\n               1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_100_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n               0 100 = Interrupt events are disabled\n               1 101 = Rising Edge Triggered\n               1 110 = Falling Edge Triggered\n               1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_100_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_100_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_100_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_100_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_100_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_100_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_100_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) GPIO input disable         1 = disable input.\n         0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) GPIO input disable         1 = disable input.\n         0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_100_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_101_PIN_CONTROL : (GPIO_100_137 Offset: 0x04) (R/W 32) GPIO 101 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_101_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_101_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_101_PIN_CONTROL) GPIO 101 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_101_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_101_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_101_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_101_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_101_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_101_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_101_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_101_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_101_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_101_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_101_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_101_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_101_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_101_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_101_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_101_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_101_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_101_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_102_PIN_CONTROL : (GPIO_100_137 Offset: 0x08) (R/W 32) GPIO 102 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_102_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_102_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_102_PIN_CONTROL) GPIO 102 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_102_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_102_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_102_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_102_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_102_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_102_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_102_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_102_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_102_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_102_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_102_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_102_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_102_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_102_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_102_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_102_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_102_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_102_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_104_PIN_CONTROL : (GPIO_100_137 Offset: 0x10) (R/W 32) GPIO 104 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_104_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_104_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_104_PIN_CONTROL) GPIO 104 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_104_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_104_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_104_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_104_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_104_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_104_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_104_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_104_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_104_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_104_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_104_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_104_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_104_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_104_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_104_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_104_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_104_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_104_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_105_PIN_CONTROL : (GPIO_100_137 Offset: 0x14) (R/W 32) GPIO 105 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_105_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_105_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_105_PIN_CONTROL) GPIO 105 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_105_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_105_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_105_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_105_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_105_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_105_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_105_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_105_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_105_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_105_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_105_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_105_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_105_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_105_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_105_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_105_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_105_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_105_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_106_PIN_CONTROL : (GPIO_100_137 Offset: 0x18) (R/W 32) GPIO 106 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_106_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_106_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_106_PIN_CONTROL) GPIO 106 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_106_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_106_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_106_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_106_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_106_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_106_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_106_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_106_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_106_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_106_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_106_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_106_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_106_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_106_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_106_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_106_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_106_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_106_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_107_PIN_CONTROL : (GPIO_100_137 Offset: 0x1c) (R/W 32) GPIO 107 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_107_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_107_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_107_PIN_CONTROL) GPIO 107 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_107_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_107_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_107_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_107_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_107_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_107_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_107_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_107_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_107_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_107_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_107_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_107_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_107_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_107_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_107_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_107_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_107_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_107_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_112_PIN_CONTROL : (GPIO_100_137 Offset: 0x28) (R/W 32) GPIO 112 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_112_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_112_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_112_PIN_CONTROL) GPIO 112 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_112_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_112_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_112_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_112_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_112_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_112_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_112_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_112_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_112_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_112_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_112_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_112_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_112_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_112_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_112_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_112_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_112_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_112_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_113_PIN_CONTROL : (GPIO_100_137 Offset: 0x2c) (R/W 32) GPIO 113 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_113_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_113_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_113_PIN_CONTROL) GPIO 113 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_113_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_113_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_113_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_113_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_113_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_113_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_113_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_113_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_113_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_113_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_113_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_113_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_113_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_113_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_113_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_113_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_113_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_113_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_114_PIN_CONTROL : (GPIO_100_137 Offset: 0x30) (R/W 32) GPIO 114 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_114_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_114_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_114_PIN_CONTROL) GPIO 114 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_114_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_114_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_114_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_114_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_114_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_114_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_114_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_114_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_114_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_114_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_114_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_114_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_114_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_114_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_114_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_114_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_114_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_114_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_115_PIN_CONTROL : (GPIO_100_137 Offset: 0x34) (R/W 32) GPIO 115 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_115_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_115_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_115_PIN_CONTROL) GPIO 115 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_115_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_115_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_115_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_115_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_115_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_115_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_115_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_115_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_115_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_115_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_115_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_115_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_115_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_115_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_115_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_115_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_115_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_115_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_116_PIN_CONTROL : (GPIO_100_137 Offset: 0x38) (R/W 32) GPIO 116 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_116_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_116_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_116_PIN_CONTROL) GPIO 116 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_116_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_116_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_116_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_116_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_116_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_116_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_116_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_116_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_116_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_116_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_116_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_116_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_116_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_116_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_116_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_116_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_116_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_116_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_117_PIN_CONTROL : (GPIO_100_137 Offset: 0x3c) (R/W 32) GPIO 117 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_117_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_117_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_117_PIN_CONTROL) GPIO 117 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_117_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_117_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_117_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_117_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_117_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_117_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_117_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_117_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_117_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_117_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_117_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_117_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_117_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_117_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_117_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_117_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_117_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_117_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_120_PIN_CONTROL : (GPIO_100_137 Offset: 0x40) (R/W 32) GPIO 120 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_120_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_120_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_120_PIN_CONTROL) GPIO 120 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_120_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_120_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_120_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_120_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_120_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_120_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_120_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_120_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_120_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_120_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_120_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_120_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_120_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_120_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_120_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_120_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_120_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_120_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_121_PIN_CONTROL : (GPIO_100_137 Offset: 0x44) (R/W 32) GPIO 121 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_121_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_121_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_121_PIN_CONTROL) GPIO 121 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_121_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_121_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_121_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_121_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_121_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_121_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_121_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_121_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_121_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_121_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_121_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_121_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_121_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_121_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_121_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_121_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_121_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_121_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_122_PIN_CONTROL : (GPIO_100_137 Offset: 0x48) (R/W 32) GPIO 122 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_122_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_122_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_122_PIN_CONTROL) GPIO 122 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_122_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_122_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_122_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_122_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_122_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_122_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_122_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_122_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_122_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_122_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_122_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_122_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_122_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_122_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_122_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_122_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_122_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_122_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_123_PIN_CONTROL : (GPIO_100_137 Offset: 0x4c) (R/W 32) GPIO 123 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_123_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_123_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_123_PIN_CONTROL) GPIO 123 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_123_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_123_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_123_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_123_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_123_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_123_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_123_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_123_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_123_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_123_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_123_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_123_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_123_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_123_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_123_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_123_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_123_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_123_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_124_PIN_CONTROL : (GPIO_100_137 Offset: 0x50) (R/W 32) GPIO 124 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_124_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_124_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_124_PIN_CONTROL) GPIO 124 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_124_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_124_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_124_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_124_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_124_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_124_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_124_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_124_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_124_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_124_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_124_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_124_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_124_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_124_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_124_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_124_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_124_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_124_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_125_PIN_CONTROL : (GPIO_100_137 Offset: 0x54) (R/W 32) GPIO 125 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_125_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_125_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_125_PIN_CONTROL) GPIO 125 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_125_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_125_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_125_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_125_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_125_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_125_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_125_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_125_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_125_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_125_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_125_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_125_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_125_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_125_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_125_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_125_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_125_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_125_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_126_PIN_CONTROL : (GPIO_100_137 Offset: 0x58) (R/W 32) GPIO 126 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_126_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_126_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_126_PIN_CONTROL) GPIO 126 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_126_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_126_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_126_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_126_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_126_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_126_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_126_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_126_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_126_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_126_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_126_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_126_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_126_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_126_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_126_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_126_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_126_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_126_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_127_PIN_CONTROL : (GPIO_100_137 Offset: 0x5c) (R/W 32) GPIO 127 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_127_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_127_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_127_PIN_CONTROL) GPIO 127 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_127_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_127_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_127_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_127_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_127_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_127_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_127_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_127_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_127_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_127_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_127_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_127_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_127_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_127_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_127_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_127_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_127_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_127_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_130_PIN_CONTROL : (GPIO_100_137 Offset: 0x60) (R/W 32) GPIO 130 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_130_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_130_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_130_PIN_CONTROL) GPIO 130 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_130_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_130_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_130_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_130_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_130_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_130_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_130_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_130_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_130_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_130_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_130_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_130_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_130_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_130_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_130_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_130_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_130_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_130_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_131_PIN_CONTROL : (GPIO_100_137 Offset: 0x64) (R/W 32) GPIO 131 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_131_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_131_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_131_PIN_CONTROL) GPIO 131 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_131_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_131_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_131_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_131_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_131_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_131_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_131_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_131_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_131_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_131_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_131_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_131_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_131_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_131_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_131_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_131_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_131_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_131_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) Register Mask  */

/* -------- GPIO_100_137_GPIO_132_PIN_CONTROL : (GPIO_100_137 Offset: 0x68) (R/W 32) GPIO 132 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_100_137_GPIO_132_PIN_CONTROL_bits_t;
#define GPIO_100_137_GPIO_132_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_100_137_GPIO_132_PIN_CONTROL) GPIO 132 Pin Control  Reset Value */

#define GPIO_100_137_GPIO_132_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_100_137_GPIO_132_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_PU_PD(value) (GPIO_100_137_GPIO_132_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_100_137_GPIO_132_PIN_CONTROL_PU_PD_Pos))
#define GPIO_100_137_GPIO_132_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_100_137_GPIO_132_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00b = VTR Power Rail. 01b = VCC Main Power Rail (as determined by the VCC_PWRGD input). \n      11b=VTR Powered Output Only: Input pad is disabled and output will be tristated when VTR Power Rail is off. \n      10b=Unpowered. The GPIO pad is turned off completely. Both the input buffer and output buffer on the pad are disabled. \n      Pull-up and pull-down resisters are disabled independent of the setting of the PU/PD field. Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_POWER_GATING(value) (GPIO_100_137_GPIO_132_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_100_137_GPIO_132_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_100_137_GPIO_132_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_100_137_GPIO_132_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_100_137_GPIO_132_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_100_137_GPIO_132_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_100_137_GPIO_132_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_100_137_GPIO_132_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_MUX_CONTROL(value) (GPIO_100_137_GPIO_132_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_100_137_GPIO_132_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_100_137_GPIO_132_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) GPIO input disable             1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_100_137_GPIO_132_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) Register Mask  */

/** \brief GPIO_100_137 register offsets definitions */
#define GPIO_100_137_GPIO_100_PIN_CONTROL_OFFSET (0x00)         /**< (GPIO_100_137_GPIO_100_PIN_CONTROL) GPIO100 Pin Control Offset */
#define GPIO_100_137_GPIO_101_PIN_CONTROL_OFFSET (0x04)         /**< (GPIO_100_137_GPIO_101_PIN_CONTROL) GPIO 101 Pin Control Offset */
#define GPIO_100_137_GPIO_102_PIN_CONTROL_OFFSET (0x08)         /**< (GPIO_100_137_GPIO_102_PIN_CONTROL) GPIO 102 Pin Control Offset */
#define GPIO_100_137_GPIO_104_PIN_CONTROL_OFFSET (0x10)         /**< (GPIO_100_137_GPIO_104_PIN_CONTROL) GPIO 104 Pin Control Offset */
#define GPIO_100_137_GPIO_105_PIN_CONTROL_OFFSET (0x14)         /**< (GPIO_100_137_GPIO_105_PIN_CONTROL) GPIO 105 Pin Control Offset */
#define GPIO_100_137_GPIO_106_PIN_CONTROL_OFFSET (0x18)         /**< (GPIO_100_137_GPIO_106_PIN_CONTROL) GPIO 106 Pin Control Offset */
#define GPIO_100_137_GPIO_107_PIN_CONTROL_OFFSET (0x1C)         /**< (GPIO_100_137_GPIO_107_PIN_CONTROL) GPIO 107 Pin Control Offset */
#define GPIO_100_137_GPIO_112_PIN_CONTROL_OFFSET (0x28)         /**< (GPIO_100_137_GPIO_112_PIN_CONTROL) GPIO 112 Pin Control Offset */
#define GPIO_100_137_GPIO_113_PIN_CONTROL_OFFSET (0x2C)         /**< (GPIO_100_137_GPIO_113_PIN_CONTROL) GPIO 113 Pin Control Offset */
#define GPIO_100_137_GPIO_114_PIN_CONTROL_OFFSET (0x30)         /**< (GPIO_100_137_GPIO_114_PIN_CONTROL) GPIO 114 Pin Control Offset */
#define GPIO_100_137_GPIO_115_PIN_CONTROL_OFFSET (0x34)         /**< (GPIO_100_137_GPIO_115_PIN_CONTROL) GPIO 115 Pin Control Offset */
#define GPIO_100_137_GPIO_116_PIN_CONTROL_OFFSET (0x38)         /**< (GPIO_100_137_GPIO_116_PIN_CONTROL) GPIO 116 Pin Control Offset */
#define GPIO_100_137_GPIO_117_PIN_CONTROL_OFFSET (0x3C)         /**< (GPIO_100_137_GPIO_117_PIN_CONTROL) GPIO 117 Pin Control Offset */
#define GPIO_100_137_GPIO_120_PIN_CONTROL_OFFSET (0x40)         /**< (GPIO_100_137_GPIO_120_PIN_CONTROL) GPIO 120 Pin Control Offset */
#define GPIO_100_137_GPIO_121_PIN_CONTROL_OFFSET (0x44)         /**< (GPIO_100_137_GPIO_121_PIN_CONTROL) GPIO 121 Pin Control Offset */
#define GPIO_100_137_GPIO_122_PIN_CONTROL_OFFSET (0x48)         /**< (GPIO_100_137_GPIO_122_PIN_CONTROL) GPIO 122 Pin Control Offset */
#define GPIO_100_137_GPIO_123_PIN_CONTROL_OFFSET (0x4C)         /**< (GPIO_100_137_GPIO_123_PIN_CONTROL) GPIO 123 Pin Control Offset */
#define GPIO_100_137_GPIO_124_PIN_CONTROL_OFFSET (0x50)         /**< (GPIO_100_137_GPIO_124_PIN_CONTROL) GPIO 124 Pin Control Offset */
#define GPIO_100_137_GPIO_125_PIN_CONTROL_OFFSET (0x54)         /**< (GPIO_100_137_GPIO_125_PIN_CONTROL) GPIO 125 Pin Control Offset */
#define GPIO_100_137_GPIO_126_PIN_CONTROL_OFFSET (0x58)         /**< (GPIO_100_137_GPIO_126_PIN_CONTROL) GPIO 126 Pin Control Offset */
#define GPIO_100_137_GPIO_127_PIN_CONTROL_OFFSET (0x5C)         /**< (GPIO_100_137_GPIO_127_PIN_CONTROL) GPIO 127 Pin Control Offset */
#define GPIO_100_137_GPIO_130_PIN_CONTROL_OFFSET (0x60)         /**< (GPIO_100_137_GPIO_130_PIN_CONTROL) GPIO 130 Pin Control Offset */
#define GPIO_100_137_GPIO_131_PIN_CONTROL_OFFSET (0x64)         /**< (GPIO_100_137_GPIO_131_PIN_CONTROL) GPIO 131 Pin Control Offset */
#define GPIO_100_137_GPIO_132_PIN_CONTROL_OFFSET (0x68)         /**< (GPIO_100_137_GPIO_132_PIN_CONTROL) GPIO 132 Pin Control Offset */

/** \brief GPIO_100_137 register API structure */
typedef struct
{  /* GPIO 100:137 Pin Control Registers */
  __IO  __GPIO_100_137_GPIO_100_PIN_CONTROL_bits_t GPIO_100_PIN_CONTROL; /**< Offset: 0x00 (R/W  32) GPIO100 Pin Control */
  __IO  __GPIO_100_137_GPIO_101_PIN_CONTROL_bits_t GPIO_101_PIN_CONTROL; /**< Offset: 0x04 (R/W  32) GPIO 101 Pin Control */
  __IO  __GPIO_100_137_GPIO_102_PIN_CONTROL_bits_t GPIO_102_PIN_CONTROL; /**< Offset: 0x08 (R/W  32) GPIO 102 Pin Control */
  __IO  __GPIO_100_137_GPIO_104_PIN_CONTROL_bits_t GPIO_104_PIN_CONTROL; /**< Offset: 0x10 (R/W  32) GPIO 104 Pin Control */
  __IO  __GPIO_100_137_GPIO_105_PIN_CONTROL_bits_t GPIO_105_PIN_CONTROL; /**< Offset: 0x14 (R/W  32) GPIO 105 Pin Control */
  __IO  __GPIO_100_137_GPIO_106_PIN_CONTROL_bits_t GPIO_106_PIN_CONTROL; /**< Offset: 0x18 (R/W  32) GPIO 106 Pin Control */
  __IO  __GPIO_100_137_GPIO_107_PIN_CONTROL_bits_t GPIO_107_PIN_CONTROL; /**< Offset: 0x1C (R/W  32) GPIO 107 Pin Control */
  __IO  __GPIO_100_137_GPIO_112_PIN_CONTROL_bits_t GPIO_112_PIN_CONTROL; /**< Offset: 0x28 (R/W  32) GPIO 112 Pin Control */
  __IO  __GPIO_100_137_GPIO_113_PIN_CONTROL_bits_t GPIO_113_PIN_CONTROL; /**< Offset: 0x2C (R/W  32) GPIO 113 Pin Control */
  __IO  __GPIO_100_137_GPIO_114_PIN_CONTROL_bits_t GPIO_114_PIN_CONTROL; /**< Offset: 0x30 (R/W  32) GPIO 114 Pin Control */
  __IO  __GPIO_100_137_GPIO_115_PIN_CONTROL_bits_t GPIO_115_PIN_CONTROL; /**< Offset: 0x34 (R/W  32) GPIO 115 Pin Control */
  __IO  __GPIO_100_137_GPIO_116_PIN_CONTROL_bits_t GPIO_116_PIN_CONTROL; /**< Offset: 0x38 (R/W  32) GPIO 116 Pin Control */
  __IO  __GPIO_100_137_GPIO_117_PIN_CONTROL_bits_t GPIO_117_PIN_CONTROL; /**< Offset: 0x3C (R/W  32) GPIO 117 Pin Control */
  __IO  __GPIO_100_137_GPIO_120_PIN_CONTROL_bits_t GPIO_120_PIN_CONTROL; /**< Offset: 0x40 (R/W  32) GPIO 120 Pin Control */
  __IO  __GPIO_100_137_GPIO_121_PIN_CONTROL_bits_t GPIO_121_PIN_CONTROL; /**< Offset: 0x44 (R/W  32) GPIO 121 Pin Control */
  __IO  __GPIO_100_137_GPIO_122_PIN_CONTROL_bits_t GPIO_122_PIN_CONTROL; /**< Offset: 0x48 (R/W  32) GPIO 122 Pin Control */
  __IO  __GPIO_100_137_GPIO_123_PIN_CONTROL_bits_t GPIO_123_PIN_CONTROL; /**< Offset: 0x4C (R/W  32) GPIO 123 Pin Control */
  __IO  __GPIO_100_137_GPIO_124_PIN_CONTROL_bits_t GPIO_124_PIN_CONTROL; /**< Offset: 0x50 (R/W  32) GPIO 124 Pin Control */
  __IO  __GPIO_100_137_GPIO_125_PIN_CONTROL_bits_t GPIO_125_PIN_CONTROL; /**< Offset: 0x54 (R/W  32) GPIO 125 Pin Control */
  __IO  __GPIO_100_137_GPIO_126_PIN_CONTROL_bits_t GPIO_126_PIN_CONTROL; /**< Offset: 0x58 (R/W  32) GPIO 126 Pin Control */
  __IO  __GPIO_100_137_GPIO_127_PIN_CONTROL_bits_t GPIO_127_PIN_CONTROL; /**< Offset: 0x5C (R/W  32) GPIO 127 Pin Control */
  __IO  __GPIO_100_137_GPIO_130_PIN_CONTROL_bits_t GPIO_130_PIN_CONTROL; /**< Offset: 0x60 (R/W  32) GPIO 130 Pin Control */
  __IO  __GPIO_100_137_GPIO_131_PIN_CONTROL_bits_t GPIO_131_PIN_CONTROL; /**< Offset: 0x64 (R/W  32) GPIO 131 Pin Control */
  __IO  __GPIO_100_137_GPIO_132_PIN_CONTROL_bits_t GPIO_132_PIN_CONTROL; /**< Offset: 0x68 (R/W  32) GPIO 132 Pin Control */
} gpio100137_registers_t;
/** @}  end of GPIO 100:137 Pin Control Registers */

#endif /* _PIC32CX_0525SG12_GPIO_100_137_COMPONENT_H_ */
