/**
 * \brief Component description for PIC32CX/0525SG12 GPIO_000_036
 *
 * Copyright (c) 2018 Microchip Technology Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/* file generated from device description version 2018-04-24T21:15:30Z */
#ifndef _PIC32CX_0525SG12_GPIO_000_036_COMPONENT_H_
#define _PIC32CX_0525SG12_GPIO_000_036_COMPONENT_H_

/** \addtogroup PIC32CX_0525SG12_GPIO_000_036 GPIO 000:036 Pin Control Registers
 *  @{
 */
/* ========================================================================== */
/**  SOFTWARE API DEFINITION FOR GPIO_000_036 */
/* ========================================================================== */

/* -------- GPIO_000_036_GPIO_000_PIN_CONTROL : (GPIO_000_036 Offset: 0x00) (R/W 32) GPIO000 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_000_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_000_PIN_CONTROL_RESETVALUE (0x8000U)                                     /**<  (GPIO_000_036_GPIO_000_PIN_CONTROL) GPIO000 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_000_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_000_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_000_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_000_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_000_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_000_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_000_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_000_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_000_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_000_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_000_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_000_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_000_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_000_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_000_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_000_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_000_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_000_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_002_PIN_CONTROL : (GPIO_000_036 Offset: 0x08) (R/W 32) GPIO 002 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_002_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_002_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_002_PIN_CONTROL) GPIO 002 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_002_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_002_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_002_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_002_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_002_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_002_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_002_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_002_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_002_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_002_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_002_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_002_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_002_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_002_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_002_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_002_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_002_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_002_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_003_PIN_CONTROL : (GPIO_000_036 Offset: 0x0c) (R/W 32) GPIO 003 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_003_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_003_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_003_PIN_CONTROL) GPIO 003 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_003_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_003_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_003_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_003_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_003_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_003_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_003_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_003_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_003_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_003_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_003_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_003_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_003_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_003_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_003_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_003_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_003_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_003_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_004_PIN_CONTROL : (GPIO_000_036 Offset: 0x10) (R/W 32) GPIO 004 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_004_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_004_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_004_PIN_CONTROL) GPIO 004 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_004_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_004_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_004_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_004_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_004_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_004_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_004_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_004_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_004_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_004_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_004_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_004_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_004_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_004_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_004_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_004_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_004_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_004_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_007_PIN_CONTROL : (GPIO_000_036 Offset: 0x1c) (R/W 32) GPIO 007 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_007_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_007_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_007_PIN_CONTROL) GPIO 007 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_007_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_007_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_007_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_007_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_007_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_007_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_007_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_007_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_007_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_007_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_007_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_007_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_007_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_007_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_007_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_007_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_007_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_007_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_010_PIN_CONTROL : (GPIO_000_036 Offset: 0x20) (R/W 32) GPIO 010 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_010_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_010_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_010_PIN_CONTROL) GPIO 010 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_010_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_010_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_010_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_010_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_010_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_010_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_010_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_010_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_010_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_010_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_010_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_010_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_010_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_010_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_010_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_010_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_010_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_010_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_011_PIN_CONTROL : (GPIO_000_036 Offset: 0x24) (R/W 32) GPIO 011 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_011_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_011_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_011_PIN_CONTROL) GPIO 011 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_011_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_011_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_011_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_011_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_011_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_011_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_011_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_011_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_011_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_011_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_011_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_011_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_011_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_011_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_011_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_011_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_011_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_011_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_012_PIN_CONTROL : (GPIO_000_036 Offset: 0x28) (R/W 32) GPIO 012 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_012_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_012_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_012_PIN_CONTROL) GPIO 012 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_012_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_012_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_012_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_012_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_012_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_012_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_012_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_012_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_012_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_012_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_012_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_012_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_012_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_012_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_012_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_012_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_012_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_012_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_013_PIN_CONTROL : (GPIO_000_036 Offset: 0x2c) (R/W 32) GPIO 013 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_013_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_013_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_013_PIN_CONTROL) GPIO 013 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_013_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_013_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_013_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_013_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_013_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_013_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_013_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_013_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_013_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_013_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_013_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_013_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_013_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_013_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_013_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_013_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_013_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_013_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_014_PIN_CONTROL : (GPIO_000_036 Offset: 0x30) (R/W 32) GPIO 014 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_014_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_014_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_014_PIN_CONTROL) GPIO 014 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_014_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_014_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_014_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_014_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_014_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_014_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_014_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_014_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_014_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_014_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_014_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_014_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_014_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_014_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_014_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_014_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_014_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_014_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_015_PIN_CONTROL : (GPIO_000_036 Offset: 0x34) (R/W 32) GPIO 015 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_015_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_015_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_015_PIN_CONTROL) GPIO 015 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_015_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_015_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_015_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_015_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_015_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_015_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_015_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_015_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_015_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_015_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_015_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_015_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_015_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_015_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_015_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_015_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_015_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_015_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_016_PIN_CONTROL : (GPIO_000_036 Offset: 0x38) (R/W 32) GPIO 016 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_016_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_016_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_016_PIN_CONTROL) GPIO 016 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_016_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_016_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_016_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_016_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_016_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_016_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_016_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_016_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_016_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_016_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_016_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_016_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_016_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_016_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_016_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_016_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_016_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_016_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_017_PIN_CONTROL : (GPIO_000_036 Offset: 0x3c) (R/W 32) GPIO 017 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_017_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_017_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_017_PIN_CONTROL) GPIO 017 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_017_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_017_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_017_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_017_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_017_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_017_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_017_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_017_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_017_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_017_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_017_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_017_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_017_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_017_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_017_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_017_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_017_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_017_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_020_PIN_CONTROL : (GPIO_000_036 Offset: 0x40) (R/W 32) GPIO 020 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_020_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_020_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_020_PIN_CONTROL) GPIO 020 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_020_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_020_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_020_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_020_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_020_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_020_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_020_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_020_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_020_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_020_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_020_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_020_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_020_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_020_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_020_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_020_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_020_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_020_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_021_PIN_CONTROL : (GPIO_000_036 Offset: 0x44) (R/W 32) GPIO 021 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_021_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_021_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_021_PIN_CONTROL) GPIO 021 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_021_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_021_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_021_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_021_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_021_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_021_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_021_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_021_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_021_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_021_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_021_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_021_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_021_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_021_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_021_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_021_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_021_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_021_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_022_PIN_CONTROL : (GPIO_000_036 Offset: 0x48) (R/W 32) GPIO 022 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_022_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_022_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_022_PIN_CONTROL) GPIO 022 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_022_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_022_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_022_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_022_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_022_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_022_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_022_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_022_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_022_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_022_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_022_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_022_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_022_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_022_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_022_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_022_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_022_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_022_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_023_PIN_CONTROL : (GPIO_000_036 Offset: 0x4c) (R/W 32) GPIO 023 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_023_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_023_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_023_PIN_CONTROL) GPIO 023 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_023_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_023_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_023_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_023_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_023_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_023_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_023_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_023_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_023_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_023_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_023_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_023_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_023_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_023_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_023_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_023_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_023_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_023_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_024_PIN_CONTROL : (GPIO_000_036 Offset: 0x50) (R/W 32) GPIO 024 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_024_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_024_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_024_PIN_CONTROL) GPIO 024 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_024_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_024_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_024_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_024_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_024_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_024_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_024_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_024_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_024_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_024_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_024_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_024_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_024_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_024_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_024_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_024_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_024_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_024_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_025_PIN_CONTROL : (GPIO_000_036 Offset: 0x54) (R/W 32) GPIO 025 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_025_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_025_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_025_PIN_CONTROL) GPIO 025 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_025_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_025_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_025_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_025_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_025_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_025_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_025_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_025_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_025_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_025_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_025_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_025_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_025_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_025_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_025_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_025_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_025_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_025_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_026_PIN_CONTROL : (GPIO_000_036 Offset: 0x58) (R/W 32) GPIO 026 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_026_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_026_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_026_PIN_CONTROL) GPIO 026 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_026_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_026_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_026_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_026_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_026_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_026_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_026_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_026_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_026_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_026_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_026_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_026_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_026_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_026_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_026_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_026_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_026_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_026_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_027_PIN_CONTROL : (GPIO_000_036 Offset: 0x5c) (R/W 32) GPIO 027 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_027_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_027_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_027_PIN_CONTROL) GPIO 027 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_027_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_027_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_027_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_027_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_027_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_027_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_027_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_027_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_027_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_027_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_027_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_027_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_027_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_027_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_027_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_027_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_027_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_027_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_030_PIN_CONTROL : (GPIO_000_036 Offset: 0x60) (R/W 32) GPIO 030 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_030_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_030_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_030_PIN_CONTROL) GPIO 030 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_030_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_030_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_030_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_030_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_030_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_030_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_030_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_030_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_030_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_030_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_030_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_030_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_030_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_030_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_030_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_030_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_030_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_030_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_031_PIN_CONTROL : (GPIO_000_036 Offset: 0x64) (R/W 32) GPIO 031 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_031_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_031_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_031_PIN_CONTROL) GPIO 031 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_031_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_031_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_031_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_031_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_031_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_031_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_031_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_031_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_031_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_031_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_031_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_031_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_031_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_031_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_031_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_031_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_031_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_031_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_032_PIN_CONTROL : (GPIO_000_036 Offset: 0x68) (R/W 32) GPIO 032 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_032_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_032_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_032_PIN_CONTROL) GPIO 032 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_032_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_032_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_032_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_032_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_032_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_032_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_032_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_032_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_032_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_032_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_032_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_032_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_032_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_032_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_032_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_032_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_032_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_032_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_033_PIN_CONTROL : (GPIO_000_036 Offset: 0x6c) (R/W 32) GPIO 033 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_033_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_033_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_033_PIN_CONTROL) GPIO 033 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_033_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_033_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_033_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_033_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_033_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_033_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_033_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_033_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_033_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_033_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_033_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_033_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_033_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_033_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_033_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_033_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_033_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_033_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_034_PIN_CONTROL : (GPIO_000_036 Offset: 0x70) (R/W 32) GPIO 034 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_034_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_034_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_034_PIN_CONTROL) GPIO 034 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_034_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_034_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_034_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_034_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_034_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_034_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_034_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_034_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_034_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_034_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_034_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_034_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_034_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_034_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_034_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_034_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_034_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_034_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_035_PIN_CONTROL : (GPIO_000_036 Offset: 0x74) (R/W 32) GPIO 035 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_035_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_035_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_035_PIN_CONTROL) GPIO 035 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_035_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_035_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_035_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_035_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_035_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_035_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_035_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_035_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_035_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_035_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_035_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_035_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_035_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_035_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_035_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_035_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_035_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_035_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) Register Mask  */

/* -------- GPIO_000_036_GPIO_036_PIN_CONTROL : (GPIO_000_036 Offset: 0x78) (R/W 32) GPIO 036 Pin Control -------- */

typedef union
{
  struct
  {
    uint32_t PU_PD:2;                   /**< bit:   0..1  These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None */
    uint32_t POWER_GATING:2;            /**< bit:   2..3  The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved */
    uint32_t INTERRUPT_DETECTION:3;     /**< bit:   4..6  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered */
    uint32_t EDGE_ENABLE:1;             /**< bit:      7  When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled */
    uint32_t OUTPUT_BUFFER_TYPE:1;      /**< bit:      8  Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain */
    uint32_t GPIO_DIRECTION:1;          /**< bit:      9  This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output */
    uint32_t GPIO_OUTPUT_SELECT:1;      /**< bit:     10  This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. */
    uint32_t POLARITY:1;                /**< bit:     11  When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted */
    uint32_t MUX_CONTROL:2;             /**< bit: 12..13  This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. */
    uint32_t :1;                        /**< bit:     14  Reserved                                      */
    uint32_t INPUT_DISABLE:1;           /**< bit:     15  GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n */
    uint32_t ALTERNATE_GPIO_DATA:1;     /**< bit:     16  Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. */
    uint32_t :7;                        /**< bit: 17..23  Reserved                                      */
    uint32_t GPIO_INPUT:1;              /**< bit:     24  Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. */
    uint32_t :7;                        /**< bit: 25..31  Reserved                                      */
  };
  uint32_t w;
} __GPIO_000_036_GPIO_036_PIN_CONTROL_bits_t;
#define GPIO_000_036_GPIO_036_PIN_CONTROL_RESETVALUE (0x00U)                                       /**<  (GPIO_000_036_GPIO_036_PIN_CONTROL) GPIO 036 Pin Control  Reset Value */

#define GPIO_000_036_GPIO_036_PIN_CONTROL_PU_PD_Pos (0)                                            /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_PU_PD_Msk (0x3U << GPIO_000_036_GPIO_036_PIN_CONTROL_PU_PD_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) These bits are used to enable an internal pull-up or pull-down resistor.\n      00 = None, 01 = Pull Up Enabled, 10 = Pull Down Enabled, 11 = None Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_PU_PD(value) (GPIO_000_036_GPIO_036_PIN_CONTROL_PU_PD_Msk & ((value) << GPIO_000_036_GPIO_036_PIN_CONTROL_PU_PD_Pos))
#define GPIO_000_036_GPIO_036_PIN_CONTROL_POWER_GATING_Pos (2)                                            /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_POWER_GATING_Msk (0x3U << GPIO_000_036_GPIO_036_PIN_CONTROL_POWER_GATING_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) The GPIO pin will be tristated when the selected power well is off.\n      00 = VTR Power Rail, 01 = VCC Main Power Rail (as determined by the VCC_PWRGD input), 1x = Reserved Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_POWER_GATING(value) (GPIO_000_036_GPIO_036_PIN_CONTROL_POWER_GATING_Msk & ((value) << GPIO_000_036_GPIO_036_PIN_CONTROL_POWER_GATING_Pos))
#define GPIO_000_036_GPIO_036_PIN_CONTROL_INTERRUPT_DETECTION_Pos (4)                                            /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_INTERRUPT_DETECTION_Msk (0x7U << GPIO_000_036_GPIO_036_PIN_CONTROL_INTERRUPT_DETECTION_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 000 = Low Level Sensitive\n      0 001 = High Level Sensitive\n                           0 100 = Interrupt events are disabled\n                           1 101 = Rising Edge Triggered\n                           1 110 = Falling Edge Triggered\n                           1 111 = Either edge triggered Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_INTERRUPT_DETECTION(value) (GPIO_000_036_GPIO_036_PIN_CONTROL_INTERRUPT_DETECTION_Msk & ((value) << GPIO_000_036_GPIO_036_PIN_CONTROL_INTERRUPT_DETECTION_Pos))
#define GPIO_000_036_GPIO_036_PIN_CONTROL_EDGE_ENABLE_Pos (7)                                            /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_EDGE_ENABLE_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_EDGE_ENABLE_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) When combined with the field INTERRUPT_DETECTION in this register, determines the interrupt capability of the GPIO input.\n      0 = Edge detection disabled, 1 = Edge detection enabled Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos (8)                                            /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_OUTPUT_BUFFER_TYPE_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) Unless explicitly stated otherwise, pins with (I/O/OD) or (O/OD) in their buffer type column in the tables are\n      compliant with the following Programmable OD/PP Multiplexing Design Rule: Each compliant pin has a programmable open drain/push-pull\n      buffer controlled by the Output Buffer Type bit in the associated Pin Control Register. The state of this bit controls the mode of\n      the interface buffer for all selected functions, including the GPIO function. 0 = Push-Pull, 1 = Open Drain Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_DIRECTION_Pos (9)                                            /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_DIRECTION_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_DIRECTION_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) This bit controls the buffer direction only when the MUX_CONTROL field is '00' selecting the pin signal function to\n      be GPIO. When the MUX_CONTROL field is greater than '00' (i.e., a non-GPIO signal function is selected) this bit has no affect\n      and the selected signal function logic directly controls the pin direction. 0 = Input, 1 = Output Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos (10)                                           /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_OUTPUT_SELECT_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_OUTPUT_SELECT_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) This control bit determines which register is used to update the data register for GPIO outputs.\n      0=GPIO output data for this GPIO come from the ALTERNATE_GPIO_DATA field of this register; writes to the bit representing\n      this GPIO in the GPIO Output Register do not affect the GPIO; 1=GPIO output data for this GPIO come from the bit representing\n      this GPIO in the GPIO Output Register; writes to the ALTERNATE_GPIO_DATA field of this register do not affect the GPIO. Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_POLARITY_Pos (11)                                           /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_POLARITY_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_POLARITY_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) When the Polarity bit is set to '1' and the MUX_CONTROL bits are greater than '00', the selected signal function outputs\n      are inverted and Interrupt Detection sense is inverted. When the MUX_CONTROL field selects the GPIO signal function (Mux='00'), the\n      Polarity bit does not effect the output. Regardless of the state of the MUX_CONTROL field and the Polarity bit, the state of the pin\n      is always reported without inversion in the GPIO input register. 1=Inverted; 0=Non-inverted Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_MUX_CONTROL_Pos (12)                                           /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_MUX_CONTROL_Msk (0x3U << GPIO_000_036_GPIO_036_PIN_CONTROL_MUX_CONTROL_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) This field determines the active signal function for a pin. 00 = GPIO Function Selected, 01 = Signal Function 1 Selected,\n      10 = Signal Function 2 Selected, 11 = Signal Function 3 Selected. Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_MUX_CONTROL(value) (GPIO_000_036_GPIO_036_PIN_CONTROL_MUX_CONTROL_Msk & ((value) << GPIO_000_036_GPIO_036_PIN_CONTROL_MUX_CONTROL_Pos))
#define GPIO_000_036_GPIO_036_PIN_CONTROL_INPUT_DISABLE_Pos (15)                                           /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_INPUT_DISABLE_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_INPUT_DISABLE_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) GPIO input disable              1 = disable input.\n             0 = do not disable input bit name.\n Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos (16)                                           /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_ALTERNATE_GPIO_DATA_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_ALTERNATE_GPIO_DATA_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) Reads of this bit always return the last data written to the GPIO output data register bit; reads do not return the\n      current output value of the GPIO pin if it is configured as an output. If the GPIO_OUTPUT_SELECT bit in this register is '1', then\n      this bit is Read Only and the GPIO output data register bit is only written by the GPIO Output Register. If the GPIO_OUTPUT_SELECT\n      bit in this register is '0', then this bit is R/W, and the bit corresponding to this GPIO in the GPIO Output Register is Read Only. Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_INPUT_Pos (24)                                           /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Position */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_INPUT_Msk (0x1U << GPIO_000_036_GPIO_036_PIN_CONTROL_GPIO_INPUT_Pos)  /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) Reads of this bit always return the state of GPIO input from the pad, independent of the Mux selection for the pin\n      or the Direction. This bit is forced high when the selected power well is off as selected by the POWER_GATING field in this register. Mask */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_Msk (0x0101BFFFUL)                                 /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) Register Mask  */

/** \brief GPIO_000_036 register offsets definitions */
#define GPIO_000_036_GPIO_000_PIN_CONTROL_OFFSET (0x00)         /**< (GPIO_000_036_GPIO_000_PIN_CONTROL) GPIO000 Pin Control Offset */
#define GPIO_000_036_GPIO_002_PIN_CONTROL_OFFSET (0x08)         /**< (GPIO_000_036_GPIO_002_PIN_CONTROL) GPIO 002 Pin Control Offset */
#define GPIO_000_036_GPIO_003_PIN_CONTROL_OFFSET (0x0C)         /**< (GPIO_000_036_GPIO_003_PIN_CONTROL) GPIO 003 Pin Control Offset */
#define GPIO_000_036_GPIO_004_PIN_CONTROL_OFFSET (0x10)         /**< (GPIO_000_036_GPIO_004_PIN_CONTROL) GPIO 004 Pin Control Offset */
#define GPIO_000_036_GPIO_007_PIN_CONTROL_OFFSET (0x1C)         /**< (GPIO_000_036_GPIO_007_PIN_CONTROL) GPIO 007 Pin Control Offset */
#define GPIO_000_036_GPIO_010_PIN_CONTROL_OFFSET (0x20)         /**< (GPIO_000_036_GPIO_010_PIN_CONTROL) GPIO 010 Pin Control Offset */
#define GPIO_000_036_GPIO_011_PIN_CONTROL_OFFSET (0x24)         /**< (GPIO_000_036_GPIO_011_PIN_CONTROL) GPIO 011 Pin Control Offset */
#define GPIO_000_036_GPIO_012_PIN_CONTROL_OFFSET (0x28)         /**< (GPIO_000_036_GPIO_012_PIN_CONTROL) GPIO 012 Pin Control Offset */
#define GPIO_000_036_GPIO_013_PIN_CONTROL_OFFSET (0x2C)         /**< (GPIO_000_036_GPIO_013_PIN_CONTROL) GPIO 013 Pin Control Offset */
#define GPIO_000_036_GPIO_014_PIN_CONTROL_OFFSET (0x30)         /**< (GPIO_000_036_GPIO_014_PIN_CONTROL) GPIO 014 Pin Control Offset */
#define GPIO_000_036_GPIO_015_PIN_CONTROL_OFFSET (0x34)         /**< (GPIO_000_036_GPIO_015_PIN_CONTROL) GPIO 015 Pin Control Offset */
#define GPIO_000_036_GPIO_016_PIN_CONTROL_OFFSET (0x38)         /**< (GPIO_000_036_GPIO_016_PIN_CONTROL) GPIO 016 Pin Control Offset */
#define GPIO_000_036_GPIO_017_PIN_CONTROL_OFFSET (0x3C)         /**< (GPIO_000_036_GPIO_017_PIN_CONTROL) GPIO 017 Pin Control Offset */
#define GPIO_000_036_GPIO_020_PIN_CONTROL_OFFSET (0x40)         /**< (GPIO_000_036_GPIO_020_PIN_CONTROL) GPIO 020 Pin Control Offset */
#define GPIO_000_036_GPIO_021_PIN_CONTROL_OFFSET (0x44)         /**< (GPIO_000_036_GPIO_021_PIN_CONTROL) GPIO 021 Pin Control Offset */
#define GPIO_000_036_GPIO_022_PIN_CONTROL_OFFSET (0x48)         /**< (GPIO_000_036_GPIO_022_PIN_CONTROL) GPIO 022 Pin Control Offset */
#define GPIO_000_036_GPIO_023_PIN_CONTROL_OFFSET (0x4C)         /**< (GPIO_000_036_GPIO_023_PIN_CONTROL) GPIO 023 Pin Control Offset */
#define GPIO_000_036_GPIO_024_PIN_CONTROL_OFFSET (0x50)         /**< (GPIO_000_036_GPIO_024_PIN_CONTROL) GPIO 024 Pin Control Offset */
#define GPIO_000_036_GPIO_025_PIN_CONTROL_OFFSET (0x54)         /**< (GPIO_000_036_GPIO_025_PIN_CONTROL) GPIO 025 Pin Control Offset */
#define GPIO_000_036_GPIO_026_PIN_CONTROL_OFFSET (0x58)         /**< (GPIO_000_036_GPIO_026_PIN_CONTROL) GPIO 026 Pin Control Offset */
#define GPIO_000_036_GPIO_027_PIN_CONTROL_OFFSET (0x5C)         /**< (GPIO_000_036_GPIO_027_PIN_CONTROL) GPIO 027 Pin Control Offset */
#define GPIO_000_036_GPIO_030_PIN_CONTROL_OFFSET (0x60)         /**< (GPIO_000_036_GPIO_030_PIN_CONTROL) GPIO 030 Pin Control Offset */
#define GPIO_000_036_GPIO_031_PIN_CONTROL_OFFSET (0x64)         /**< (GPIO_000_036_GPIO_031_PIN_CONTROL) GPIO 031 Pin Control Offset */
#define GPIO_000_036_GPIO_032_PIN_CONTROL_OFFSET (0x68)         /**< (GPIO_000_036_GPIO_032_PIN_CONTROL) GPIO 032 Pin Control Offset */
#define GPIO_000_036_GPIO_033_PIN_CONTROL_OFFSET (0x6C)         /**< (GPIO_000_036_GPIO_033_PIN_CONTROL) GPIO 033 Pin Control Offset */
#define GPIO_000_036_GPIO_034_PIN_CONTROL_OFFSET (0x70)         /**< (GPIO_000_036_GPIO_034_PIN_CONTROL) GPIO 034 Pin Control Offset */
#define GPIO_000_036_GPIO_035_PIN_CONTROL_OFFSET (0x74)         /**< (GPIO_000_036_GPIO_035_PIN_CONTROL) GPIO 035 Pin Control Offset */
#define GPIO_000_036_GPIO_036_PIN_CONTROL_OFFSET (0x78)         /**< (GPIO_000_036_GPIO_036_PIN_CONTROL) GPIO 036 Pin Control Offset */

/** \brief GPIO_000_036 register API structure */
typedef struct
{  /* GPIO 000:036 Pin Control Registers */
  __IO  __GPIO_000_036_GPIO_000_PIN_CONTROL_bits_t GPIO_000_PIN_CONTROL; /**< Offset: 0x00 (R/W  32) GPIO000 Pin Control */
  __IO  __GPIO_000_036_GPIO_002_PIN_CONTROL_bits_t GPIO_002_PIN_CONTROL; /**< Offset: 0x08 (R/W  32) GPIO 002 Pin Control */
  __IO  __GPIO_000_036_GPIO_003_PIN_CONTROL_bits_t GPIO_003_PIN_CONTROL; /**< Offset: 0x0C (R/W  32) GPIO 003 Pin Control */
  __IO  __GPIO_000_036_GPIO_004_PIN_CONTROL_bits_t GPIO_004_PIN_CONTROL; /**< Offset: 0x10 (R/W  32) GPIO 004 Pin Control */
  __IO  __GPIO_000_036_GPIO_007_PIN_CONTROL_bits_t GPIO_007_PIN_CONTROL; /**< Offset: 0x1C (R/W  32) GPIO 007 Pin Control */
  __IO  __GPIO_000_036_GPIO_010_PIN_CONTROL_bits_t GPIO_010_PIN_CONTROL; /**< Offset: 0x20 (R/W  32) GPIO 010 Pin Control */
  __IO  __GPIO_000_036_GPIO_011_PIN_CONTROL_bits_t GPIO_011_PIN_CONTROL; /**< Offset: 0x24 (R/W  32) GPIO 011 Pin Control */
  __IO  __GPIO_000_036_GPIO_012_PIN_CONTROL_bits_t GPIO_012_PIN_CONTROL; /**< Offset: 0x28 (R/W  32) GPIO 012 Pin Control */
  __IO  __GPIO_000_036_GPIO_013_PIN_CONTROL_bits_t GPIO_013_PIN_CONTROL; /**< Offset: 0x2C (R/W  32) GPIO 013 Pin Control */
  __IO  __GPIO_000_036_GPIO_014_PIN_CONTROL_bits_t GPIO_014_PIN_CONTROL; /**< Offset: 0x30 (R/W  32) GPIO 014 Pin Control */
  __IO  __GPIO_000_036_GPIO_015_PIN_CONTROL_bits_t GPIO_015_PIN_CONTROL; /**< Offset: 0x34 (R/W  32) GPIO 015 Pin Control */
  __IO  __GPIO_000_036_GPIO_016_PIN_CONTROL_bits_t GPIO_016_PIN_CONTROL; /**< Offset: 0x38 (R/W  32) GPIO 016 Pin Control */
  __IO  __GPIO_000_036_GPIO_017_PIN_CONTROL_bits_t GPIO_017_PIN_CONTROL; /**< Offset: 0x3C (R/W  32) GPIO 017 Pin Control */
  __IO  __GPIO_000_036_GPIO_020_PIN_CONTROL_bits_t GPIO_020_PIN_CONTROL; /**< Offset: 0x40 (R/W  32) GPIO 020 Pin Control */
  __IO  __GPIO_000_036_GPIO_021_PIN_CONTROL_bits_t GPIO_021_PIN_CONTROL; /**< Offset: 0x44 (R/W  32) GPIO 021 Pin Control */
  __IO  __GPIO_000_036_GPIO_022_PIN_CONTROL_bits_t GPIO_022_PIN_CONTROL; /**< Offset: 0x48 (R/W  32) GPIO 022 Pin Control */
  __IO  __GPIO_000_036_GPIO_023_PIN_CONTROL_bits_t GPIO_023_PIN_CONTROL; /**< Offset: 0x4C (R/W  32) GPIO 023 Pin Control */
  __IO  __GPIO_000_036_GPIO_024_PIN_CONTROL_bits_t GPIO_024_PIN_CONTROL; /**< Offset: 0x50 (R/W  32) GPIO 024 Pin Control */
  __IO  __GPIO_000_036_GPIO_025_PIN_CONTROL_bits_t GPIO_025_PIN_CONTROL; /**< Offset: 0x54 (R/W  32) GPIO 025 Pin Control */
  __IO  __GPIO_000_036_GPIO_026_PIN_CONTROL_bits_t GPIO_026_PIN_CONTROL; /**< Offset: 0x58 (R/W  32) GPIO 026 Pin Control */
  __IO  __GPIO_000_036_GPIO_027_PIN_CONTROL_bits_t GPIO_027_PIN_CONTROL; /**< Offset: 0x5C (R/W  32) GPIO 027 Pin Control */
  __IO  __GPIO_000_036_GPIO_030_PIN_CONTROL_bits_t GPIO_030_PIN_CONTROL; /**< Offset: 0x60 (R/W  32) GPIO 030 Pin Control */
  __IO  __GPIO_000_036_GPIO_031_PIN_CONTROL_bits_t GPIO_031_PIN_CONTROL; /**< Offset: 0x64 (R/W  32) GPIO 031 Pin Control */
  __IO  __GPIO_000_036_GPIO_032_PIN_CONTROL_bits_t GPIO_032_PIN_CONTROL; /**< Offset: 0x68 (R/W  32) GPIO 032 Pin Control */
  __IO  __GPIO_000_036_GPIO_033_PIN_CONTROL_bits_t GPIO_033_PIN_CONTROL; /**< Offset: 0x6C (R/W  32) GPIO 033 Pin Control */
  __IO  __GPIO_000_036_GPIO_034_PIN_CONTROL_bits_t GPIO_034_PIN_CONTROL; /**< Offset: 0x70 (R/W  32) GPIO 034 Pin Control */
  __IO  __GPIO_000_036_GPIO_035_PIN_CONTROL_bits_t GPIO_035_PIN_CONTROL; /**< Offset: 0x74 (R/W  32) GPIO 035 Pin Control */
  __IO  __GPIO_000_036_GPIO_036_PIN_CONTROL_bits_t GPIO_036_PIN_CONTROL; /**< Offset: 0x78 (R/W  32) GPIO 036 Pin Control */
} gpio000036_registers_t;
/** @}  end of GPIO 000:036 Pin Control Registers */

#endif /* _PIC32CX_0525SG12_GPIO_000_036_COMPONENT_H_ */
